{
  "custom": {
    "configPath": "/usr/local/bin/ignition/data/configs",
    "currentItemPath": "test.files[0]",
    "expandAll": false,
    "fileStructure": [
      {
        "data": {
          "name": "test",
          "value": "{\n  \"scope\": \"A\",\n  \"version\": 1,\n  \"restricted\": false,\n  \"overridable\": true,\n  \"files\": [\n    \"code.py\"\n  ],\n  \"attributes\": {\n    \"lastModification\": {\n      \"actor\": \"external\",\n      \"timestamp\": \"2022-11-21T22:09:48Z\"\n    },\n    \"lastModificationSignature\": \"dcd4b6ba143a8e5b7d1c06b3ca091941a4dc47c2a1a1acea212bbb8cd51a407f\",\n    \"hintScope\": 2\n  }\n}"
        },
        "expanded": false,
        "items": [],
        "label": "test"
      },
      {
        "data": {
          "name": "test2",
          "value": "{}"
        },
        "expanded": false,
        "items": [],
        "label": "test2"
      }
    ],
    "newConfigName": "",
    "refresh": false,
    "selectedConfig": {
      "name": "test",
      "value": "{\n  \"scope\": \"A\",\n  \"version\": 1,\n  \"restricted\": false,\n  \"overridable\": true,\n  \"files\": [\n    \"code.py\"\n  ],\n  \"attributes\": {\n    \"lastModification\": {\n      \"actor\": \"external\",\n      \"timestamp\": \"2022-11-21T22:09:48Z\"\n    },\n    \"lastModificationSignature\": \"dcd4b6ba143a8e5b7d1c06b3ca091941a4dc47c2a1a1acea212bbb8cd51a407f\",\n    \"hintScope\": 2\n  }\n}"
    }
  },
  "params": {
    "folderPath": "configs",
    "obscureValues": false
  },
  "propConfig": {
    "custom.configPath": {
      "binding": {
        "config": {
          "path": "view.params.folderPath"
        },
        "transforms": [
          {
            "code": "\tfrom com.inductiveautomation.ignition.gateway import IgnitionGateway\n\tdataDir \u003d  str(IgnitionGateway.get().systemManager.dataDir.absoluteFile).replace(\u0027\\\\\u0027, \u0027/\u0027)\n\treturn \u0027{}/{}\u0027.format(dataDir, value)",
            "type": "script"
          }
        ],
        "type": "property"
      },
      "persistent": true
    },
    "custom.currentItemPath": {
      "binding": {
        "config": {
          "expression": "\u0027\u0027"
        },
        "type": "expr"
      },
      "persistent": true
    },
    "custom.expandAll": {
      "binding": {
        "config": {
          "expression": "false"
        },
        "type": "expr"
      },
      "persistent": true
    },
    "custom.fileStructure": {
      "binding": {
        "config": {
          "struct": {
            "base_path": "{view.custom.configPath}",
            "refresh": "{view.custom.refresh}"
          },
          "waitOnAll": true
        },
        "transforms": [
          {
            "code": "\ttry:\n\t\timport os\n\t\tbase_path \u003d self.custom.configPath\n\t\t\t\n\t\tdef getPaths(path):\n\t\t\titem_list \u003d []\n\t\t\tfiles \u003d os.listdir(path)\n\t\t\tfor file_name in files:\n\t\t\t\tfile_path \u003d path + \u0027/\u0027 + file_name\n\t\t\t\tfile_subpath \u003d file_path.replace(base_path, \u0027\u0027).replace(\u0027/\u0027, \u0027.\u0027)[1:].replace(\u0027.json\u0027, \u0027\u0027)\n\t\t\t\t\n\t\t\t\tif os.path.isdir(file_path):\n\t\t\t\t\titem_list.append({\n\t\t\t\t\t\t\u0027label\u0027: file_name,\n\t\t\t\t\t\t\u0027data\u0027: file_path,\n\t\t\t\t\t\t\u0027items\u0027: getPaths(file_path),\n\t\t\t\t\t\t\u0027expanded\u0027: False\n\t\t\t\t\t})\n\t\t\t\telse:\n\t\t\t\t\titem_list.append({\n\t\t\t\t\t\u0027label\u0027:file_name.replace(\u0027.json\u0027, \u0027\u0027),\n\t\t\t\t\t\u0027data\u0027: {\u0027name\u0027:file_subpath, \u0027value\u0027:system.file.readFileAsString(file_path)},\n\t\t\t\t\t\u0027items\u0027: [],\n\t\t\t\t\t\u0027expanded\u0027: False\n\t\t\t\t\t})\n\t\t\treturn item_list\n\t\t\n\t\tconfig_path \u003d self.custom.configPath\n\t\tres \u003d getPaths(config_path)\n\t\treturn res\n\texcept OSError as e:\n\t\treturn []",
            "type": "script"
          }
        ],
        "type": "expr-struct"
      },
      "persistent": true
    },
    "custom.newConfigName": {
      "binding": {
        "config": {
          "expression": "\u0027\u0027"
        },
        "type": "expr"
      },
      "persistent": true
    },
    "custom.refresh": {
      "binding": {
        "config": {
          "expression": "false"
        },
        "type": "expr"
      },
      "persistent": true
    },
    "custom.selectedConfig": {
      "binding": {
        "config": {
          "struct": {
            "name": "\"\"",
            "value": "\"\""
          },
          "waitOnAll": true
        },
        "transforms": [
          {
            "code": "\treturn value",
            "type": "script"
          }
        ],
        "type": "expr-struct"
      },
      "persistent": true
    },
    "params.folderPath": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.obscureValues": {
      "paramDirection": "input",
      "persistent": true
    }
  },
  "props": {
    "defaultSize": {
      "height": 561,
      "width": 950
    }
  },
  "root": {
    "children": [
      {
        "children": [
          {
            "children": [
              {
                "meta": {
                  "name": "Config Label"
                },
                "position": {
                  "basis": "30px",
                  "shrink": 0
                },
                "props": {
                  "style": {
                    "paddingRight": "5px"
                  },
                  "text": "Configs",
                  "textStyle": {
                    "fontWeight": "bold",
                    "textAlign": "center"
                  }
                },
                "type": "ia.display.label"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "events": {
                          "component": {
                            "onActionPerformed": {
                              "config": {
                                "script": "\tsystem.perspective.sendMessage(\"addConfig\", {}, \"view\")"
                              },
                              "scope": "G",
                              "type": "script"
                            }
                          }
                        },
                        "meta": {
                          "name": "Add"
                        },
                        "position": {
                          "basis": "30px",
                          "shrink": 0
                        },
                        "props": {
                          "image": {
                            "icon": {
                              "color": "--callToAction",
                              "path": "material/add",
                              "style": {}
                            }
                          },
                          "style": {
                            "backgroundColor": "transparent",
                            "borderStyle": "hidden"
                          },
                          "text": ""
                        },
                        "type": "ia.input.button"
                      },
                      {
                        "events": {
                          "component": {
                            "onActionPerformed": {
                              "config": {
                                "script": "\tconfig_name \u003d self.view.custom.selectedConfig.name\n\tconfig_name \u003d config_name.replace(\u0027.\u0027,\u0027/\u0027)\n\t\n\tnew_file_data \u003d \"{}\"\n\tconfig_path \u003d self.view.custom.configPath\n\t\n\timport os\n\tos.remove(\"%s/%s.json\" % (config_path, config_name))\n\t\n\tself.props.value \u003d 0\n\tself.view.custom.refresh \u003d not self.view.custom.refresh\n\t"
                              },
                              "scope": "G",
                              "type": "script"
                            }
                          }
                        },
                        "meta": {
                          "name": "Delete"
                        },
                        "position": {
                          "basis": "30px",
                          "shrink": 0
                        },
                        "propConfig": {
                          "props.confirm.enabled": {
                            "binding": {
                              "config": {
                                "expression": "coalesce({view.custom.selectedConfig.name}, \u0027\u0027) !\u003d \u0027\u0027"
                              },
                              "type": "expr"
                            }
                          },
                          "props.enabled": {
                            "binding": {
                              "config": {
                                "expression": "coalesce({view.custom.selectedConfig.name}, \u0027\u0027) !\u003d \u0027\u0027"
                              },
                              "type": "expr"
                            }
                          },
                          "props.readyState.icon.color": {
                            "binding": {
                              "config": {
                                "expression": "coalesce({view.custom.selectedConfig.name}, \u0027\u0027) !\u003d \u0027\u0027"
                              },
                              "transforms": [
                                {
                                  "fallback": "--callToAction--disabled",
                                  "inputType": "scalar",
                                  "mappings": [
                                    {
                                      "input": true,
                                      "output": "--warning"
                                    }
                                  ],
                                  "outputType": "scalar",
                                  "type": "map"
                                }
                              ],
                              "type": "expr"
                            }
                          }
                        },
                        "props": {
                          "confirm": {
                            "text": "Are you sure? This is permanent."
                          },
                          "readyState": {
                            "icon": {
                              "path": "material/delete",
                              "style": {
                                "height": "24px",
                                "width": "2rem"
                              }
                            },
                            "style": {
                              "backgroundColor": "transparent",
                              "borderStyle": "hidden"
                            },
                            "text": ""
                          },
                          "writingState": {
                            "icon": {
                              "path": "material/hourglass_empty",
                              "style": {
                                "height": "24px",
                                "width": "2rem"
                              }
                            },
                            "text": ""
                          }
                        },
                        "type": "ia.input.oneshotbutton"
                      }
                    ],
                    "meta": {
                      "name": "Actions"
                    },
                    "position": {
                      "basis": "35px",
                      "shrink": 0
                    },
                    "props": {
                      "direction": "column",
                      "style": {
                        "paddingLeft": "10px"
                      }
                    },
                    "type": "ia.container.flex"
                  },
                  {
                    "children": [
                      {
                        "children": [
                          {
                            "meta": {
                              "name": "TextField"
                            },
                            "position": {
                              "basis": "100px",
                              "grow": 1
                            },
                            "propConfig": {
                              "props.text": {
                                "binding": {
                                  "config": {
                                    "bidirectional": true,
                                    "path": "view.custom.newConfigName"
                                  },
                                  "type": "property"
                                }
                              }
                            },
                            "props": {
                              "placeholder": "Config Name..."
                            },
                            "type": "ia.input.text-field"
                          },
                          {
                            "events": {
                              "dom": {
                                "onClick": {
                                  "config": {
                                    "script": "\tconfig_name \u003d self.view.custom.newConfigName\n\tnew_file_data \u003d \"{}\"\n\tconfig_path \u003d self.view.custom.configPath\n\t\n\tsystem.file.writeFile(\"%s/%s.json\" % (config_path, config_name), new_file_data)\n\tself.view.custom.newConfigName \u003d \u0027\u0027\n\tsystem.perspective.sendMessage(\"addConfig\", {}, \"view\")\n\t\n\tself.view.custom.refresh \u003d not self.view.custom.refresh"
                                  },
                                  "scope": "G",
                                  "type": "script"
                                }
                              }
                            },
                            "meta": {
                              "name": "Save"
                            },
                            "position": {
                              "basis": "30px"
                            },
                            "props": {
                              "color": "--callToAction",
                              "path": "material/save",
                              "style": {
                                "cursor": "pointer",
                                "padding": "3px"
                              }
                            },
                            "type": "ia.display.icon"
                          }
                        ],
                        "meta": {
                          "name": "AddConfig"
                        },
                        "position": {
                          "basis": "30px",
                          "shrink": 0
                        },
                        "propConfig": {
                          "position.display": {
                            "binding": {
                              "config": {
                                "expression": "false"
                              },
                              "type": "expr"
                            }
                          }
                        },
                        "scripts": {
                          "customMethods": [],
                          "extensionFunctions": null,
                          "messageHandlers": [
                            {
                              "messageType": "addConfig",
                              "pageScope": false,
                              "script": "\tself.position.display \u003d not self.position.display",
                              "sessionScope": false,
                              "viewScope": true
                            }
                          ]
                        },
                        "type": "ia.container.flex"
                      },
                      {
                        "events": {
                          "component": {
                            "onItemClicked": {
                              "config": {
                                "script": "\tif not isinstance(event.data, str):\n\t\tself.view.custom.selectedConfig \u003d self.props.selectionData[0].value\n\t\n\tself.view.custom.currentItemPath \u003d \u0027\u0027"
                              },
                              "scope": "G",
                              "type": "script"
                            }
                          }
                        },
                        "meta": {
                          "name": "FileTree"
                        },
                        "position": {
                          "grow": 1
                        },
                        "propConfig": {
                          "position.display": {
                            "binding": {
                              "config": {
                                "expression": "len({view.custom.fileStructure}) \u003e 0"
                              },
                              "type": "expr"
                            }
                          },
                          "props.items": {
                            "binding": {
                              "config": {
                                "path": "view.custom.fileStructure"
                              },
                              "transforms": [
                                {
                                  "code": "\tself.view.custom.selectedConfig \u003d \u0027\u0027\n\treturn value",
                                  "type": "script"
                                }
                              ],
                              "type": "property"
                            }
                          },
                          "props.selection": {
                            "binding": {
                              "config": {
                                "path": "view.custom.refresh"
                              },
                              "transforms": [
                                {
                                  "code": "\treturn []",
                                  "type": "script"
                                }
                              ],
                              "type": "property"
                            }
                          },
                          "props.selectionData": {
                            "binding": {
                              "config": {
                                "path": "view.custom.refresh"
                              },
                              "transforms": [
                                {
                                  "code": "\treturn []",
                                  "type": "script"
                                }
                              ],
                              "type": "property"
                            }
                          }
                        },
                        "props": {
                          "appearance": {
                            "defaultNodeIcons": {
                              "collapsed": {
                                "path": "material/folder"
                              },
                              "expanded": {
                                "path": "material/folder_open"
                              }
                            },
                            "expandIcons": {
                              "collapsed": {
                                "path": "material/arrow_right"
                              },
                              "empty": {
                                "path": "material/navigate_next"
                              },
                              "expanded": {
                                "path": "material/arrow_drop_down"
                              }
                            }
                          },
                          "branchNodeSelectable": false,
                          "style": {
                            "borderStyle": "solid",
                            "borderWidth": 1
                          }
                        },
                        "type": "ia.display.tree"
                      },
                      {
                        "meta": {
                          "name": "MissingFolderLabel"
                        },
                        "position": {
                          "grow": 1
                        },
                        "propConfig": {
                          "position.display": {
                            "binding": {
                              "config": {
                                "expression": "len({view.custom.fileStructure}) \u003d 0"
                              },
                              "type": "expr"
                            }
                          }
                        },
                        "props": {
                          "style": {
                            "backgroundColor": "var(--neutral-10)",
                            "border": "1px solid var(--border)"
                          },
                          "text": "No config files found.",
                          "textStyle": {
                            "textAlign": "center"
                          }
                        },
                        "type": "ia.display.label"
                      }
                    ],
                    "meta": {
                      "name": "FlexContainer"
                    },
                    "position": {
                      "grow": 1
                    },
                    "props": {
                      "direction": "column"
                    },
                    "type": "ia.container.flex"
                  }
                ],
                "meta": {
                  "name": "ConfigSection"
                },
                "position": {
                  "grow": 1
                },
                "type": "ia.container.flex"
              }
            ],
            "meta": {
              "name": "Left"
            },
            "position": {
              "position": "left"
            },
            "props": {
              "direction": "column",
              "style": {
                "paddingBottom": "25px"
              }
            },
            "type": "ia.container.flex"
          },
          {
            "children": [
              {
                "children": [
                  {
                    "events": {
                      "component": {
                        "onActionPerformed": {
                          "config": {
                            "script": "\tself.view.custom.expandAll \u003d not self.view.custom.expandAll"
                          },
                          "scope": "G",
                          "type": "script"
                        }
                      }
                    },
                    "meta": {
                      "name": "Add"
                    },
                    "position": {
                      "basis": "30px",
                      "shrink": 0
                    },
                    "propConfig": {
                      "props.image.icon.path": {
                        "binding": {
                          "config": {
                            "path": "view.custom.expandAll"
                          },
                          "transforms": [
                            {
                              "fallback": "material/keyboard_arrow_right",
                              "inputType": "scalar",
                              "mappings": [
                                {
                                  "input": true,
                                  "output": "material/keyboard_arrow_down"
                                }
                              ],
                              "outputType": "scalar",
                              "type": "map"
                            }
                          ],
                          "type": "property"
                        }
                      }
                    },
                    "props": {
                      "image": {
                        "icon": {
                          "color": "--callToAction",
                          "style": {}
                        }
                      },
                      "style": {
                        "backgroundColor": "transparent",
                        "borderStyle": "hidden"
                      },
                      "text": ""
                    },
                    "type": "ia.input.button"
                  },
                  {
                    "meta": {
                      "name": "Label"
                    },
                    "position": {
                      "basis": "110px",
                      "shrink": 0
                    },
                    "props": {
                      "style": {
                        "paddingRight": "5px"
                      },
                      "text": "Current Key: ",
                      "textStyle": {
                        "fontWeight": "bold",
                        "textAlign": "right"
                      }
                    },
                    "type": "ia.display.label"
                  },
                  {
                    "meta": {
                      "name": "TextField"
                    },
                    "position": {
                      "basis": "32px",
                      "grow": 1
                    },
                    "propConfig": {
                      "props.text": {
                        "binding": {
                          "config": {
                            "path": "view.custom.currentItemPath"
                          },
                          "type": "property"
                        }
                      }
                    },
                    "type": "ia.input.text-field"
                  },
                  {
                    "events": {
                      "component": {
                        "onActionPerformed": {
                          "config": {
                            "script": "\tsystem.perspective.download(\"%s.json\" % self.view.custom.selectedConfig.name, self.view.custom.selectedConfig.value)"
                          },
                          "scope": "G",
                          "type": "script"
                        }
                      }
                    },
                    "meta": {
                      "name": "FileDownload",
                      "tooltip": {
                        "enabled": true,
                        "text": "Download Config File"
                      }
                    },
                    "position": {
                      "basis": "100px",
                      "shrink": 0
                    },
                    "propConfig": {
                      "props.enabled": {
                        "binding": {
                          "config": {
                            "expression": "coalesce({view.custom.selectedConfig.name}, \u0027\u0027) !\u003d \u0027\u0027"
                          },
                          "type": "expr"
                        }
                      },
                      "props.style.backgroundColor": {
                        "binding": {
                          "config": {
                            "expression": "coalesce({view.custom.selectedConfig.name}, \u0027\u0027) !\u003d \u0027\u0027"
                          },
                          "transforms": [
                            {
                              "fallback": "--callToAction--disabled",
                              "inputType": "scalar",
                              "mappings": [
                                {
                                  "input": true,
                                  "output": "--callToAction"
                                }
                              ],
                              "outputType": "scalar",
                              "type": "map"
                            }
                          ],
                          "type": "expr"
                        }
                      }
                    },
                    "props": {
                      "image": {
                        "icon": {
                          "path": "material/cloud_download"
                        }
                      },
                      "text": ""
                    },
                    "type": "ia.input.button"
                  },
                  {
                    "events": {
                      "component": {
                        "onFileReceived": {
                          "config": {
                            "script": "\tfilePath \u003d \"%s/%s.json\" % (self.view.custom.configPath, self.view.custom.selectedConfig.name)\n\t\n\tjsonObj \u003d system.util.jsonDecode(event.file.getString())\n\t\n\tif jsonObj is not None:\n\t\tevent.file.copyTo(filePath)\n\t\tself.view.custom.selectedConfig.value \u003d event.file.getString()"
                          },
                          "scope": "G",
                          "type": "script"
                        }
                      }
                    },
                    "meta": {
                      "name": "FileUpload",
                      "tooltip": {
                        "enabled": true,
                        "text": "Upload Config File"
                      }
                    },
                    "position": {
                      "basis": "100px",
                      "shrink": 0
                    },
                    "propConfig": {
                      "props.fileUploadIcon.color": {
                        "binding": {
                          "config": {
                            "expression": "coalesce({view.custom.selectedConfig.name}, \u0027\u0027) !\u003d \u0027\u0027"
                          },
                          "transforms": [
                            {
                              "fallback": "--callToAction--disabled",
                              "inputType": "scalar",
                              "mappings": [
                                {
                                  "input": true,
                                  "output": "--callToAction"
                                }
                              ],
                              "outputType": "scalar",
                              "type": "map"
                            }
                          ],
                          "type": "expr"
                        }
                      }
                    },
                    "props": {
                      "fileUploadIcon": {}
                    },
                    "type": "ia.input.fileupload"
                  }
                ],
                "meta": {
                  "name": "Actions"
                },
                "position": {
                  "basis": "30px",
                  "shrink": 0
                },
                "props": {
                  "justify": "flex-end"
                },
                "type": "ia.container.flex"
              },
              {
                "meta": {
                  "name": "CurrentObject"
                },
                "position": {
                  "grow": 1
                },
                "propConfig": {
                  "custom.currentItemPath": {
                    "binding": {
                      "config": {
                        "struct": {
                          "currentItem": "{this.props.selection[0]}",
                          "items": "{this.props.items}"
                        },
                        "waitOnAll": true
                      },
                      "transforms": [
                        {
                          "code": "\tif value.currentItem is None or value.items \u003d\u003d []:\n\t\treturn \u0027\u0027\n\t\n\tconfigName \u003d self.view.custom.selectedConfig.name\n\t\n\telementPathIndices \u003d [int(val) for val in value.currentItem.split(\u0027/\u0027)]\n\t\n\tcurrentItem \u003d value.items\n\tpathItems \u003d [configName]\n\n\tfor index in elementPathIndices:\n\t\tcurrentItem \u003d currentItem[index]\n\t\tpath_label \u003d currentItem[\u0027label\u0027].split(\u0027:\u0027)[0]\n\t\t\n\t\t# If the current item is a number, add brackets\n\t\tif path_label.isnumeric():\n\t\t\tpath_label \u003d \"[%s]\" % path_label\n\t\t\t\n\t\tpathItems.append(path_label)\n\t\tcurrentItem \u003d currentItem[\u0027items\u0027]\n\t\n\t# Join everything together,then remove any uneccessay period/bracket pairs\t\n\titemPath \u003d \".\".join(pathItems).replace(\u0027.[\u0027, \u0027[\u0027)\n\tself.view.custom.currentItemPath \u003d itemPath\n\treturn itemPath",
                          "type": "script"
                        }
                      ],
                      "type": "expr-struct"
                    }
                  },
                  "props.items": {
                    "binding": {
                      "config": {
                        "struct": {
                          "expandAll": "{view.custom.expandAll}",
                          "selectedConfig": "{view.custom.selectedConfig.value}"
                        },
                        "waitOnAll": true
                      },
                      "transforms": [
                        {
                          "code": "\tif (value.selectedConfig or \u0027\u0027) \u003d\u003d \u0027\u0027:\n\t\treturn []\n\t\n\tobj \u003d system.util.jsonDecode(value.selectedConfig)\n\t\n\tdef getItemStruct(label, data, items):\n\t\tif not (isinstance(data, dict) or isinstance(data, list)) and not self.view.params.obscureValues:\n\t\t\tlabel \u003d \"%s: %s\" % (label, data)\n\t\n\t\treturn {\n\t\t\t\t  \"label\": label,\n\t\t\t\t  \"expanded\": value.expandAll,\n\t\t\t\t  \"data\": data,\n\t\t\t\t  \"items\": items\n\t\t\t\t}\n\t\n\tdef getItems(key, val):\n\n\t\tif isinstance(val, dict):\n\t\t\treturn [getItemStruct(k, v, getItems(k, v)) for k, v in val.items()]\n\t\t\n\t\telif isinstance(val, list):\n\t\t\treturn [getItemStruct(i, v, getItems(i, v)) for i, v in enumerate(val)]\n\t\t\n\t\telse:\n\t\t\treturn []\n\n\treturn [getItemStruct(k, v, getItems(k, v)) for k, v in obj.items()]",
                          "type": "script"
                        }
                      ],
                      "type": "expr-struct"
                    }
                  },
                  "props.selection": {
                    "binding": {
                      "config": {
                        "path": "view.custom.selectedConfig"
                      },
                      "transforms": [
                        {
                          "code": "\treturn []",
                          "type": "script"
                        }
                      ],
                      "type": "property"
                    }
                  },
                  "props.selectionData": {
                    "binding": {
                      "config": {
                        "path": "view.custom.selectedConfig"
                      },
                      "transforms": [
                        {
                          "code": "\treturn []",
                          "type": "script"
                        }
                      ],
                      "type": "property"
                    }
                  }
                },
                "props": {
                  "appearance": {
                    "expandIcons": {
                      "collapsed": {
                        "path": "material/arrow_right"
                      },
                      "expanded": {
                        "path": "material/arrow_drop_down"
                      }
                    }
                  },
                  "style": {
                    "borderStyle": "solid",
                    "borderWidth": 1
                  }
                },
                "type": "ia.display.tree"
              },
              {
                "children": [
                  {
                    "meta": {
                      "name": "Label"
                    },
                    "position": {
                      "basis": "300px"
                    },
                    "propConfig": {
                      "props.text": {
                        "binding": {
                          "config": {
                            "path": ".../CurrentObject.custom.currentItemPath"
                          },
                          "type": "property"
                        }
                      }
                    },
                    "type": "ia.display.label"
                  },
                  {
                    "meta": {
                      "name": "TextField"
                    },
                    "position": {
                      "basis": "314px",
                      "grow": 1
                    },
                    "propConfig": {
                      "props.text": {
                        "binding": {
                          "config": {
                            "path": ".../CurrentObject.props.selectionData[0].value"
                          },
                          "type": "property"
                        }
                      }
                    },
                    "type": "ia.input.text-field"
                  },
                  {
                    "events": {
                      "dom": {
                        "onClick": {
                          "config": {
                            "script": "\tGeneral.Config.set_config_value(\n\t\tconfig_name \u003d self.parent.parent.parent.getChild(\"Left\").getChild(\"ConfigSection\").getChild(\"FlexContainer\").getChild(\"FileTree\").props.selectionData[0].value.value, \n\t\tconfig_key \u003d self.parent.parent.getChild(\"CurrentObject\").custom.currentItemPath, \n\t\tconfig_value \u003d self.props.text\n\t)\n\t\t"
                          },
                          "scope": "G",
                          "type": "script"
                        }
                      }
                    },
                    "meta": {
                      "name": "Button"
                    },
                    "position": {
                      "basis": "80px"
                    },
                    "props": {
                      "text": "Update"
                    },
                    "type": "ia.input.button"
                  }
                ],
                "meta": {
                  "name": "FlexContainer"
                },
                "position": {
                  "basis": "30px"
                },
                "type": "ia.container.flex"
              }
            ],
            "meta": {
              "name": "Right"
            },
            "position": {
              "position": "right"
            },
            "props": {
              "direction": "column",
              "style": {
                "paddingBottom": "25px",
                "paddingRight": "10px"
              }
            },
            "type": "ia.container.flex"
          }
        ],
        "meta": {
          "name": "SplitContainer"
        },
        "position": {
          "basis": "200px",
          "grow": 1
        },
        "props": {
          "split": {
            "position": "31%"
          }
        },
        "type": "ia.container.split"
      }
    ],
    "meta": {
      "name": "root"
    },
    "props": {
      "direction": "column"
    },
    "type": "ia.container.flex"
  }
}